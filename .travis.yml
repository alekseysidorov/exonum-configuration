language: rust

addons:
  apt:
    sources:
    - sourceline: 'ppa:giskou/librocksdb'
    packages:
    - libssl-dev
    - librocksdb
    - libsnappy-dev

rust:
- stable

cache: cargo

sudo: false

env:
  global:
  - CLIPPY_VERS=0.0.166
  - RUSTFMT_VERS=0.9.0
  - DEADLINKS_VERS=0.2.1
  - ROCKSDB_LIB_DIR=/usr/lib/x86_64-linux-gnu
  - SNAPPY_LIB_DIR=/usr/lib/x86_64-linux-gnu

install:
- |
  if [ ! -f "$HOME/.local/lib/libsodium.a" ]; then
    wget https://download.libsodium.org/libsodium/releases/libsodium-1.0.13.tar.gz
    tar xvf libsodium-1.0.13.tar.gz
    cd libsodium-1.0.13
    ./configure --prefix=$HOME/.local
    make
    make install
    cd ..
  fi
- export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/.local/lib
- export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:$HOME/.local/lib/pkgconfig
- |
  if [[ "$FEATURE" == "clippy" ]]; then
    cargo clippy --version | grep $CLIPPY_VERS || cargo install clippy --force --vers $CLIPPY_VERS
  fi
- |
  if [[ "$FEATURE" == "non-fatal-checks" ]]; then
    cargo-deadlinks -V | grep $DEADLINKS_VERS || cargo install cargo-deadlinks --vers $DEADLINKS_VERS --force
    cargo update
  fi
- |
  if [[ "$FEATURE" == "fmt" ]]; then
    cargo-audit -V || cargo install cargo-audit --force
    rustfmt -V | grep $RUSTFMT_VERS || cargo install rustfmt --vers $RUSTFMT_VERS --force
    cargo update
  fi
- cargo install --list

script: skip

jobs:
  include:
  - stage: lint
    env:
    - FEATURE=non-fatal-checks
    script:
    - cargo doc --no-deps && cargo deadlinks --dir target/doc || true
  - stage: lint
    env:
    - FEATURE=fmt
    script:
    - cargo audit
    - cargo fmt -- --write-mode=diff
  - stage: lint
    rust: nightly-2017-10-19
    env:
    - FEATURE=clippy
    script:
    - cargo clippy -- -D warnings
  - stage: test
    script:
    - cargo test

notifications:
  slack:
    secure: FnDaD3+0m3+XqQmakHZF9zMvtXhRQczP8qoiAS471JFWpBQyXbp+v98K7dIyRAlqwiAFaJuTr8Zxsem8bzmBoUixML0AN2ekngI1S147LMITMov6PEuruxQHfaWjCJ2L8iZy6vUQH+afZcJmEVMhCVJijgFpHyngBcDrCxFg5QJXwWTXztWxQlcoyCz1U4E3EuJWm2w/8MZwRsD4L5RlwrfBpc7tVeETekhakR0iDYjn5mt0AD+lpBfHcppB3LE5JTIc7nQR4OmmWZ9JJbp6qbFcqn7WEUQsubJuAfSRVwosTZxjd0lPiK9gw8F7RaYvemV4A7Wmc7WNthDKkf7XZ79wMTrBvB2FnozZXvCnwTBrm/KadZtnv9F1Hof4a7F3p+F29RY+FV6AJGI4xtSZYRKFnUCUgmKxlZUYtQ9E8ToZsn/ZgsilVL3RWCnIF1PJW8nnQiT5b9QbyT9z1hDqifeloBW0WJDxCMGz/jKDNx9kiRdnytcXOFy/2koDbXtrIUchPmMdunpMGB0qk8LUgnmV1v7dWcBQlGWrg+OwdyUQqBdaLmKHAqQ9quK4EUxIolxoT+AN0prquuoRMY8uCVZ/LpaGMWKofoDoj9m12/uGxDJOAXZJ2dGhr/672mwvG+qX40JcF24aRAZaw5pQ4GLVUdtIuRy6TjgMEomqP64=
